/**
 * Copyright (c) 2014 OGN, All Rights Reserved.
 */

package org.ogn.commons.beacon;

import java.util.HashMap;
import java.util.Map;

/**
 * definition of supported types of hardware addresses
 */
public enum AddressType {
    RANDOM(0) {
        @Override
        public String getInfo() {
            return "changing (random) address generated by the device";
        }

    },
    ICAO(1) {
        @Override
        public String getInfo() {
            return "ICAO address";
        }

    },
    FLARM(2) {
        @Override
        public String getInfo() {
            return "FLARM hardware address";
        }
    },
    OGN(3) { // OGN tracker
        @Override
        public String getInfo() {
            return "OGN tracker's hardware address";
        }
    },

    UNRECOGNIZED(-1) {
        @Override
        public String getInfo() {
            return "Address type unrecognized";
        }
    };

    private int value;

    private AddressType(int value) {
        this.value = value;
    }

    public int getCode() {
        return this.value;
    }

    public abstract String getInfo();

    private static final Map<Integer, AddressType> typesByValue = new HashMap<>();

    static {
        for (AddressType type : AddressType.values()) {
            typesByValue.put(type.value, type);
        }
    }

    public static AddressType forValue(int value) {
        return typesByValue.containsKey(value) ? typesByValue.get(value) : UNRECOGNIZED;
    }

}
